open source 
npm
node package manager
=> Local package
=> Global package
    Setup, create, build and test

JSON
JavaScript Object Notation
Data represantaion

string   ="aakash" ,"10"
number  =4655465467, 45645.456
boolean = true /false

[
    {
        name:"John",
        class:"UI",
        rollno:1
    },
    {
        name:"Alis",
        class:"AI",
        rollno:2
    }
]

=>package.json 

First file and entry file to application
version
name
packages
start command
test command
description

/*************************************
Step to Create Package.json
******************************/
=>Go inside the folder with cmd/terminal
    =>npm init
        => Answer all qouestions
            =>type yes
                => press enter

/**********************
{
  "name": "myangapp",
  "version": "1.0.0",
  "description": "this is about setup",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "angular",
    "node"
  ],
  "author": "nareshit",
  "license": "ISC"
}
*******************************/


/*********************************
    Step to install local package
*********************************/
=>Go inside the folder with cmd/terminal
    =>npm install zone.js --save

CLI=> command line interface

/*****************************
Step to install global package
****************************/
//For window
=>Run cmd as admin
    =>npm i -g @aakashdeveloper/create-node-app

//For mac/linux
=>run terminal
    => sudo npm i -g @aakashdeveloper/create-node-app


/***********************************
Step to setup angular app
****************************/
=>Install cli globally
    =>npm i -g @angular/cli
        =>Go inside the folder where you 
          want app with cmd
          =>ng new secondapp
                =>cd secondapp
                    =>npm start
                        =>Browser type localhost:4200

/***********************************************************/
module      => declare all file here
component   => is a page of a website
               have its own html css logics
               => component.ts   => logics
               => component.html =>design
               => component.css  => style
pipe        => filtering logic or run time data logics
service     => Dependceny injection/ any external connection
routing     => to navigate 


=> One parent module & one parent component



.ts(typescript)


package.json=>angular.json=>main.ts=>app.module.ts=>app.component.ts=>component.html
=>index.html

/*****
Imports
*******/
Module => NgModule
Component => Component



/*****************
    Step Form component
*********************/
First Create Module file
    => Create Component file
        => declare component in module
            =>Import browsermodule and declare in imports array
                => copy component selector 
                    => put inside the html body

*** Only first conponent will declare in bootstrap array
*** Only first component will be in index.html  
    Rest all will load through main component


/***********************************
 Binding in Angular
****************************/
OneWay
=>Data Binding       {{}}
=>Property Binding    []
=>Event Binding       ()

TwoWay Binding       [()]



//***********************************
 BootStrap in Angular
****************************/
Grid
Table
Panel
Button
forms
alert
glyphicon
navbar



<!--<div class="jumbotron">
    <h1>{{title}}</h1>
    <p>Resize the browser window to see the effect.
        The columns will automatically stack on top of each other when the screen is less than 768px wide.
    </p>
</div>

<div class="row">
    <div style="background:gray;height:300px"
    class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
    </div>
    <div style="background:green;height:300px"
        class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
    </div>
    <div style="background:slateblue;height:300px"
    class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
    </div>
    <div style="background:teal;height:300px"
    class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
    </div>
</div>
<button class="btn btn-success" type="submit">Submit</button>-->

var a = [1,2,3,4]
undefined
a[0]
1
a[1]
2
for(i=0;i<a.length;i++){ console.log(a[i])}
VM877:1 1
VM877:1 2
VM877:1 3
VM877:1 4


//***********************************
Structral directive
****************************/
*ngFor = to print data from the loop
*ngIF  = to show/ hide and work on boolean value

/***********************
**********************/
var
let 
const

var a = 10
var a 
a = 10

var  = We can declare and reassign
let = we cannot redecalre but we can reassign
const = we cannot redecalre nor reassign


/*************
Inbuilt pipe
****************/
uppercase
lowercase
titlecase
currency
date
percentage


https://www.w3schools.com/jsref/jsref_map.asp
 https://www.w3schools.com/jsref/jsref_filter.asp 
https://www.w3schools.com/jsref/jsref_indexof.asp

/**************
    Functions
***************/
function add(a,b){
    return a+b
}

const add = (a,b)  => { return a+b }


const ages = [32, 33, 16, 40];
ages.filter((age) => { return age >= 18 })}

var numbers = [4, 9, 16, 25];
numbers.map((a) => {return a*2})


var marks = [0,1,2,3,4]
marks.map((a) => {return a*2})

var marks = [0,1,2,3,4]
marks.filter((a) => {return a*2})

var city = ["London","Delhi", "NewYork",,"Helsinki"]



var a = 10
var b = "my age is "+a 
my age is 10
var c = `my age is ${a}`



input bind as Property
output bind as event


/***************
    Angular CLI
*****************/
ng generate/g component/c customer-forms
ng g c customer-forms
ng g s myservice
ng g p mypipe
ng g m module


/*******************
 File walk through
******************/
tslint            | No Change    | Default    | standerd of writing code
tsconfig.json     | No Change    | Default    | Transpile and read the build app
tsconfig.app.json | No Change    | Default    | Include & exclude the file 
Readme            | Change Req   | Default    | Description of app
package.json      | Change Req   | Default    | App command and package
package-lock.json | No Change    | Default    |  For inter Dependceny
karama.conf.js    | Min Change   | Default    | Karam Configuration
angular.json      | Min Change   | Default    | Starting point of App
.gitignore        | No Change    | Default    | Avoid pushing to git 
.editorConfig     | Min Change   | Default    | Standerd in text editor 







